{"version":3,"sources":["components/filter-container/filter-container.component.jsx","components/header/header.component.jsx","components/heart/heart.component.jsx","components/image-card/image-card.component.jsx","components/images-list/images-list.component.jsx","components/loading-spinner/loading-spinner.component.jsx","components/modal/modal.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["FilterContainer","dateFilterValue","setDateFilter","className","onChange","date","value","Header","href","Heart","floatDirection","style","background","float","onClick","e","target","classList","toggle","ImageCard","id","hdurl","title","explanation","url","backgroundImage","modal","document","getElementById","imgHtml","insertAdjacentHTML","display","length","substring","ImagesList","imagesList","map","image","index","LoadingSpinner","Modal","remove","App","props","newDateFormat","today","Date","setHours","alert","toISOString","slice","setState","initiateImagesList","a","loading","process","fetch","resp","json","images","console","log","updatedImagesList","nanoid","favorite","state","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"gbA6BeA,EAxBS,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,gBAAiBC,EAAmB,EAAnBA,cAOvC,OACI,qBAAKC,UAAU,iBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,WAAf,4CAGA,qBAAKA,UAAU,WAAf,SACI,cAAC,IAAD,CACAC,SAZK,SAACC,GAClBH,EAAcG,IAYFC,MAAOL,YCJZM,G,MAdA,WACX,OACQ,wBAAQJ,UAAU,+BAAlB,SACI,qBAAKA,UAAU,sBAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,6BACI,mBAAGA,UAAU,yBAAyBK,KAAK,IAA3C,oCCObC,G,MAZD,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,eAKZ,OACI,qBAAKP,UAAU,QAAf,SACI,wBAAQA,UAAU,QAAQQ,MAAO,CAACC,WAAW,kCAAoCC,MAAM,GAAD,OAAKH,IAAmBI,QAN7F,SAACC,GACtBA,EAAEC,OAAOC,UAAUC,OAAO,oBCuCnBC,G,MAzCG,SAAC,GAA+C,EAA9CC,GAA+C,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,MAAOjB,EAA4B,EAA5BA,KAAMkB,EAAsB,EAAtBA,YAAsB,EAATC,IAYrD,OACI,qBAAKrB,UAAU,uBAAf,SACI,sBAAKA,UAAU,OAAf,UAEIkB,EACC,qBACGlB,UAAU,WACVQ,MAAO,CACHc,gBAAgB,OAAD,OAASJ,EAAT,MAEnBP,QApBS,WACrB,IAAMY,EAAQC,SAASC,eAAe,WAChCC,EAAO,6BACFR,EADE,qDACgDC,EADhD,0CAEOA,EAFP,oBAIbI,EAAMI,mBAAmB,aAAcD,GACvCH,EAAMf,MAAMoB,QAAU,WAed,qBACA5B,UAAU,WACVQ,MAAO,CACHc,gBAAgB,kCAIpB,sBAAKtB,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BmB,IAC5B,mBAAGnB,UAAU,YAAb,SAA0BE,IAC1B,mBAAGF,UAAU,YAAb,SAA2BoB,EAAYS,OAAS,IAAOT,EAAYU,UAAU,EAAG,KAAO,MAAQV,IAC/F,cAAC,EAAD,CAAOb,eAAe,oBCxB3BwB,EAZI,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WACjB,OACI,qBAAKhC,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACMgC,EAAWC,KAAI,SAACC,EAAOC,GAAR,OACjB,cAAC,EAAD,eAA2BD,GAAXC,W,QCKjBC,G,MAVQ,WACnB,OACI,sBAAKpC,UAAU,aAAf,UACI,wBACA,wBACA,6BCWGqC,G,MAfD,WAQV,OACI,qBAAKpB,GAAG,UAAUjB,UAAU,QAA5B,SACI,sBAAMA,UAAU,QAAQW,QARN,WACtBa,SAASC,eAAe,WAAWjB,MAAMoB,QAAU,OACnDJ,SAASC,eAAe,aAAaa,SACrCd,SAASC,eAAe,WAAWa,UAK/B,sBCLNC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAQRzC,cAAgB,SAACG,GACf,IAMIuC,EANEC,EAAQ,IAAIC,MAClBD,EAAME,SAAS,EAAE,EAAE,EAAE,GAClB,IAAID,KAAKzC,GAAQwC,GAClBG,MAAM,gDAKNJ,EADCvC,EACe,IAAIyC,KAAKzC,GAAM4C,cAAcC,MAAM,EAAG,IAEtC,GAElB,EAAKC,SAAS,CACZlD,gBAAiBI,IAEnB,EAAK+C,mBAAmBR,KAzBP,EA+BnBQ,mBA/BmB,sBA+BE,gDAAAC,EAAA,6DAAOhD,EAAP,+BAAc,KACjC,EAAK8C,SAAS,CACZG,SAAS,IAEP9B,EAAM,GAEPA,EADAnB,GAAiB,OAATA,EACL,yDAAqDA,EAArD,oBAAqEkD,4CAErE,8DAA0DA,4CAR7C,SAUAC,MAAMhC,GAVN,cAUbiC,EAVa,gBAWEA,EAAKC,OAXP,OAWbC,EAXa,OAYnBC,QAAQC,IAAIF,GAGVG,EAAoBH,EAAOvB,KAAI,SAAAC,GAAK,oBAClCjB,GAAG,GAAD,OAAK2C,eACPC,UAAU,GACP3B,MAIH,EAAKc,SAAS,CACdhB,WAAY2B,EACZR,SAAS,IAxBM,4CA7BnB,EAAKW,MAAQ,CACXhE,gBAAiB,GACjBkC,WAAY,GACZmB,SAAS,GALM,E,qDA2BnB,WACEY,KAAKd,uB,oBAgCP,WACA,MAA+Cc,KAAKD,MAA7ChE,EAAP,EAAOA,gBAAiBkC,EAAxB,EAAwBA,WAAYmB,EAApC,EAAoCA,QACpC,OACE,sBAAKnD,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAiBF,gBAAiBA,EAAiBC,cAAegE,KAAKhE,gBACtEoD,EAAU,cAAC,EAAD,IAAqB,cAAC,EAAD,CAAYnB,WAAYA,IACxD,cAAC,EAAD,W,GApEYgC,aA0EHzB,ICvEA0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpD,SAASC,eAAe,SAM1BwC,M","file":"static/js/main.5753c42c.chunk.js","sourcesContent":["import React from 'react';\nimport DatePicker from 'react-date-picker';\n\nimport './filter.styles.css';\n\nconst FilterContainer = ({dateFilterValue, setDateFilter}) => {\n\n\n    const handleChange = (date) => {\n        setDateFilter(date);\n    };\n\n    return (\n        <div className=\"container my-3\">\n            <div className=\"row align-items-center\">\n                <div className=\"col-auto\">\n                    Browse Photos by starting date\n                </div>\n                <div className=\"col-auto\">\n                    <DatePicker \n                    onChange={handleChange}\n                    value={dateFilterValue}/>\n                </div>\n                \n            </div>\n        </div>\n    )\n};\n\nexport default FilterContainer;","import React from 'react';\nimport './header.styles.css'\n\nconst Header = () => {\n    return (\n            <header className=\"container-fluid p-4 bg-light\">\n                <nav className=\"navbar navbar-light\">\n                    <div className=\"container-fluid\">\n                        <h1>\n                            <a className=\"site-header__logo-link\" href=\"/\">Spacestagram</a>\n                        </h1>\n                    </div>\n                </nav>\n            </header>\n    )\n}\n\nexport default Header;","import React from 'react';\n\nimport './heart.styles.css'\n\nconst Heart = ({floatDirection}) => {\n    const handleHeartClick = (e) => {\n        e.target.classList.toggle('is-active');\n    }\n\n    return(\n        <div className=\"stage\">\n            <button className=\"heart\" style={{background: `url(\"assets/resized-heart.png\")`, float: `${floatDirection}`}} onClick={handleHeartClick}></button>\n        </div>\n    )\n}\n\nexport default Heart\n","import React from 'react';\nimport Heart from '../heart/heart.component';\nimport './image-card.styles.css';\n\nconst ImageCard = ({id, hdurl, title, date, explanation, url}) => {\n\n    const handleImageClick = () => {\n        const modal = document.getElementById(\"myModal\");\n        const imgHtml = `\n        <img src=${hdurl} class=\"modal-content\" id=\"FullImage\" alt=${title} />\n        <div id=\"Caption\">${title}</div>\n        `\n        modal.insertAdjacentHTML('afterbegin', imgHtml);\n        modal.style.display = \"block\";\n    }\n\n    return (\n        <div className=\"col-12 col-md-6 my-3\">\n            <div className=\"card\">\n            {\n                hdurl ?\n                (<div\n                    className=\"card-img\" \n                    style={{\n                        backgroundImage: `url(${hdurl})`\n                    }}\n                    onClick={handleImageClick}></div>)\n                :\n                <div\n                className=\"card-img\" \n                style={{\n                    backgroundImage: `url(assets/placeholder.jpeg)`\n                }}></div>\n            }\n                \n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">{title}</h5>\n                    <p className=\"card-text\">{date}</p>\n                    <p className=\"card-text\">{(explanation.length > 150) ? explanation.substring(0, 150) + '...' : explanation}</p>\n                    <Heart floatDirection=\"right\"/>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default ImageCard;","import React from 'react';\nimport ImageCard from '../image-card/image-card.component';\n\nconst ImagesList = ({imagesList}) => {\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                { imagesList.map((image, index) => (\n                <ImageCard key={index} {...image} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default ImagesList;","import React from 'react';\n\nimport './loading-spinner.styles.css'\nconst LoadingSpinner = () => {\n    return (\n        <div className=\"lds-ripple\">\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    )\n}\n\nexport default LoadingSpinner;","import React from 'react';\n\nimport './modal.styles.css'\n\nconst Modal = () => {\n\n    const handleCloseButton = () => {\n        document.getElementById(\"myModal\").style.display = \"none\";\n        document.getElementById(\"FullImage\").remove();\n        document.getElementById(\"Caption\").remove();\n    }\n\n    return (\n        <div id=\"myModal\" className=\"modal\">\n            <span className=\"close\" onClick={handleCloseButton}>&times;</span>\n        </div>\n    )\n}\n\nexport default Modal","import React, {Component} from 'react';\nimport './App.css';\nimport FilterContainer from './components/filter-container/filter-container.component';\nimport Header from './components/header/header.component';\nimport ImagesList from './components/images-list/images-list.component';\nimport {nanoid} from 'nanoid';\nimport LoadingSpinner from './components/loading-spinner/loading-spinner.component';\nimport Modal from './components/modal/modal.component';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dateFilterValue: '',\n      imagesList: [],\n      loading: false\n    }\n  }\n\n  setDateFilter = (date) => {\n    const today = new Date();\n    today.setHours(0,0,0,0);\n    if(new Date(date) > today) {\n      alert(\"Date selected should be before today's date\");\n      return;\n      }\n    let newDateFormat;\n    if(date) {\n      newDateFormat = new Date(date).toISOString().slice(0, 10);\n    } else {\n      newDateFormat = ''\n    }\n    this.setState({\n      dateFilterValue: date\n    });\n    this.initiateImagesList(newDateFormat);\n  }\n  componentDidMount() {\n    this.initiateImagesList()\n}\n\n  initiateImagesList = async (date = null) => {\n    this.setState({\n      loading: true\n    })\n    let url = '';\n    if(date && date !== null) {\n       url = `https://api.nasa.gov/planetary/apod?start_date=${date}&api_key=${process.env.REACT_APP_NASA_API_KEY}`;\n    } else {\n       url = `https://api.nasa.gov/planetary/apod?count=8&api_key=${process.env.REACT_APP_NASA_API_KEY}`;\n    }\n    const resp = await fetch(url)\n    const images = await resp.json()\n    console.log(images)\n    let updatedImagesList;\n\n      updatedImagesList = images.map(image =>  ({ \n        id: `${nanoid()}`, \n        favorite: false, \n        ...image\n      }));\n    \n        \n        this.setState({\n        imagesList: updatedImagesList,\n        loading: false\n      })\n  }\n\n\n  render() {\n  const {dateFilterValue, imagesList, loading} = this.state;\n  return (\n    <div className=\"App\">\n      <Header/>\n      <FilterContainer dateFilterValue={dateFilterValue} setDateFilter={this.setDateFilter} />\n      {loading ? <LoadingSpinner /> : <ImagesList imagesList={imagesList} />}\n      <Modal />\n    </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}